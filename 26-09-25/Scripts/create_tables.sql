/*
RM561061 - Arthur Thomas Mariano de Souza
RM559873 - Davi Cavalcanti Jorge
RM559728 - Mateus da Silveira Lima
*/

-- Tabela para armazenar as unidades de saúde (hospitais, clínicas, etc.)
CREATE TABLE TB_MEDI_UNIDADE_SAUDE (
id_unidade_saude INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL,
deleted NUMBER(1) DEFAULT 0 NOT NULL,
dt_criacao TIMESTAMP NOT NULL,
nm_unidade VARCHAR2(100) NOT NULL,
nr_cnpj VARCHAR2(14) NOT NULL,
ds_endereco VARCHAR2(255) NOT NULL,
nr_telefone VARCHAR2(15),
tp_unidade VARCHAR2(20) NOT NULL,
CONSTRAINT PK_UNIDADE_SAUDE PRIMARY KEY (id_unidade_saude),
CONSTRAINT UK_UNIDADE_SAUDE_CNPJ UNIQUE (nr_cnpj),
CONSTRAINT CHK_UNIDADE_SAUDE_TIPO CHECK (tp_unidade IN ('HOSPITAL', 'CLÍNICA', 'LABORATÓRIO'))
);

-- Tabela para armazenar as contas de acesso à plataforma
CREATE TABLE TB_MEDI_USUARIO (
id_usuario INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL,
deleted NUMBER(1) DEFAULT 0 NOT NULL,
dt_criacao TIMESTAMP NOT NULL,
nm_usuario VARCHAR2(100) NOT NULL,
ds_email VARCHAR2(100) NOT NULL,
ds_senha_hash VARCHAR2(255) NOT NULL,
nr_cpf VARCHAR2(11) NOT NULL,
tp_usuario VARCHAR2(20) NOT NULL,
CONSTRAINT PK_USUARIO PRIMARY KEY (id_usuario),
CONSTRAINT UK_USUARIO_EMAIL UNIQUE (ds_email),
CONSTRAINT UK_USUARIO_CPF UNIQUE (nr_cpf),
CONSTRAINT CHK_USUARIO_TIPO CHECK (tp_usuario IN ('GESTOR', 'COLABORADOR', 'PACIENTE'))
);

-- Tabela para catalogar as especialidades médicas
CREATE TABLE TB_MEDI_ESPECIALIDADE (
id_especialidade INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL,
deleted NUMBER(1) DEFAULT 0 NOT NULL,
dt_criacao TIMESTAMP NOT NULL,
nm_especialidade VARCHAR2(100) NOT NULL,
CONSTRAINT PK_ESPECIALIDADE PRIMARY KEY (id_especialidade),
CONSTRAINT UK_ESPECIALIDADE_NOME UNIQUE (nm_especialidade)
);

-- Tabela com o perfil de paciente, vinculada a um usuário
CREATE TABLE TB_MEDI_PACIENTE (
id_paciente INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL,
deleted NUMBER(1) DEFAULT 0 NOT NULL,
dt_criacao TIMESTAMP NOT NULL,
id_usuario INTEGER NOT NULL,
dt_nascimento DATE,
nr_convenio VARCHAR2(50),
CONSTRAINT PK_PACIENTE PRIMARY KEY (id_paciente),
CONSTRAINT UK_PACIENTE_USUARIO UNIQUE (id_usuario),
CONSTRAINT FK_PACIENTE_USUARIO FOREIGN KEY (id_usuario)
REFERENCES TB_MEDI_USUARIO (id_usuario) ON DELETE CASCADE
);

-- Tabela para os colaboradores (funcionários) das unidades de saúde
CREATE TABLE TB_MEDI_COLABORADOR (
id_colaborador INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL,
deleted NUMBER(1) DEFAULT 0 NOT NULL,
dt_criacao TIMESTAMP NOT NULL,
id_usuario INTEGER NOT NULL,
id_unidade_saude INTEGER NOT NULL,
ds_cargo VARCHAR2(50) NOT NULL,
CONSTRAINT PK_COLABORADOR PRIMARY KEY (id_colaborador),
CONSTRAINT UK_COLABORADOR_USUARIO_UNIDADE UNIQUE (id_usuario, id_unidade_saude),
CONSTRAINT FK_COLABORADOR_USUARIO FOREIGN KEY (id_usuario)
REFERENCES TB_MEDI_USUARIO (id_usuario) ON DELETE CASCADE,
CONSTRAINT FK_COLABORADOR_UNIDADE FOREIGN KEY (id_unidade_saude)
REFERENCES TB_MEDI_UNIDADE_SAUDE (id_unidade_saude) ON DELETE CASCADE
);

-- Tabela de junção para atribuir especialidades aos colaboradores
CREATE TABLE TB_MEDI_COLABORADOR_ESPECIALIDADE (
id_col_especialidade INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL,
deleted NUMBER(1) DEFAULT 0 NOT NULL,
dt_criacao TIMESTAMP NOT NULL,
id_colaborador INTEGER NOT NULL,
id_especialidade INTEGER NOT NULL,
CONSTRAINT PK_COLABORADOR_ESPECIALIDADE PRIMARY KEY (id_col_especialidade),
CONSTRAINT UK_COL_ESP UNIQUE (id_colaborador, id_especialidade),
CONSTRAINT FK_COL_ESP_COLABORADOR FOREIGN KEY (id_colaborador)
REFERENCES TB_MEDI_COLABORADOR (id_colaborador) ON DELETE CASCADE,
CONSTRAINT FK_COL_ESP_ESPECIALIDADE FOREIGN KEY (id_especialidade)
REFERENCES TB_MEDI_ESPECIALIDADE (id_especialidade) ON DELETE CASCADE
);

-- Tabela para os recursos gerenciáveis da unidade (leitos, salas, equipamentos)
CREATE TABLE TB_MEDI_RECURSO (
id_recurso INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL,
deleted NUMBER(1) DEFAULT 0 NOT NULL,
dt_criacao TIMESTAMP NOT NULL,
id_unidade_saude INTEGER NOT NULL,
nm_recurso VARCHAR2(100) NOT NULL,
tp_recurso VARCHAR2(20) NOT NULL,
st_recurso VARCHAR2(20) NOT NULL,
CONSTRAINT PK_RECURSO PRIMARY KEY (id_recurso),
CONSTRAINT FK_RECURSO_UNIDADE FOREIGN KEY (id_unidade_saude)
REFERENCES TB_MEDI_UNIDADE_SAUDE (id_unidade_saude) ON DELETE CASCADE
);

-- Tabela central para registrar todos os eventos (consultas, internações, exames)
CREATE TABLE TB_MEDI_AGENDAMENTO (
id_agendamento INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL,
deleted NUMBER(1) DEFAULT 0 NOT NULL,
dt_criacao TIMESTAMP NOT NULL,
id_paciente INTEGER NOT NULL,
id_colaborador INTEGER NOT NULL,
id_recurso INTEGER NOT NULL,
id_unidade_saude INTEGER NOT NULL,
dt_hr_inicio TIMESTAMP NOT NULL,
dt_hr_fim TIMESTAMP,
tp_agendamento VARCHAR2(20) NOT NULL,
st_agendamento VARCHAR2(20) NOT NULL,
dt_atualizacao TIMESTAMP NOT NULL,
CONSTRAINT PK_AGENDAMENTO PRIMARY KEY (id_agendamento),
CONSTRAINT FK_AGENDAMENTO_PACIENTE FOREIGN KEY (id_paciente)
REFERENCES TB_MEDI_PACIENTE (id_paciente),
CONSTRAINT FK_AGENDAMENTO_COLABORADOR FOREIGN KEY (id_colaborador)
REFERENCES TB_MEDI_COLABORADOR (id_colaborador),
CONSTRAINT FK_AGENDAMENTO_RECURSO FOREIGN KEY (id_recurso)
REFERENCES TB_MEDI_RECURSO (id_recurso),
CONSTRAINT FK_AGENDAMENTO_UNIDADE FOREIGN KEY (id_unidade_saude)
REFERENCES TB_MEDI_UNIDADE_SAUDE (id_unidade_saude)
);
